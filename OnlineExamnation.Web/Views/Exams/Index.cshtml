@model PagedResult<OnlineExamination.ViewModels.ExamViewModel>

@{
    ViewData["Title"] = "Index";
}

<div>
    <br />
    <a asp-action="Create" asp-controller="Exams" class="btn btn-primary">Create New</a>
    <div>
        <table id="userGrid" class="table table-striped table-bordered dt-responsive nowrap"
               width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th> Title</th>
                    <th> Description</th>
                    <th> Start Date</th>
                    <th> Time</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Data)
                {
                <tr>
                    <td>@item.Title</td>
                    <td>@item.Description</td>
                    <td>@item.StartDate</td>
                    <td>@item.Time</td>

                </tr>
                }
            </tbody>

        </table>
        <cs-pager cs-paging-pagesize=(int)Model.PageSize
                  cs-paging-pagenumber=(int)Model.PageNumber
                  cs-paging-totalitems=(int)Model.TotalItems
                  cs-pagenumber-param="pagenumber"
                  asp-controller="Exams"
                  asp-action="Index"
                  cs-pager-li-current-class="page-item active"
                  cs-pager-li-other-class="page-item"
                  cs-pager-non-active-class="page-item disabled"
                  cs-pager-link-current-class="page-link"
                  cs-pager-link-other-class="page-link">
        </cs-pager>
    </div>
    <a id="printPDF" class="btn btn-primary">Print</a>
</div>
@section scripts{
    <script>
    $(document).ready(function () {
        $('#userGrid').DataTable({
                "paging": false,
                    "filter": true
            });
    });
        $("#printPDF").click(function () {
            var elsement = document.getElementById("userGrid");
            var mode = "avoid-all";
            var pagebreake = (mode === 'specify') ?
                { mode: '', before: '.before', after: '.after', avoid: '.avoid' } :
                { mode: mode }
            html2pdf().from(element).set({
                marging: [30, 10, 5, 10],
                pagebreak: { avoid: 'tr' },
                jsPDF: { orentation: 'landscape', unit: 'pt', format: 'letter', compressPDF: true }
            }).save()
        });
    </script>
}


@*<p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StartDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Time)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.GroupsId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TotalCount)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Time)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GroupsId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalCount)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
    }
        </tbody>
    </table>*@
